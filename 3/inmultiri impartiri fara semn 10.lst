     1                                  ;Înmulțiri, împărțiri - Interpretare fara semn
     2                                  ;10. d-(7-a*b+c)/a-6+x/2
     3                                  ; a,c-byte; b-word; d-doubleword; x-qword
     4                                  bits 32
     5                                  
     6                                  global start
     7                                  
     8                                  extern exit
     9                                  import exit msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12 00000000 02                          a db 2
    13 00000001 01                          c db 1
    14 00000002 0100                        b dw 1
    15 00000004 01000000                    d dd 1
    16 00000008 0400000000000000            x dq 4
    17                                      
    18                                  segment code use32 class=code
    19                                      start:
    20                                          ;d - (7 - a * b + c) / a - 6 + x / 2
    21 00000000 A0[00000000]                    mov al, [a]
    22 00000005 B400                            mov ah, 0 ; conversie fara semn
    23 00000007 66F725[02000000]                mul word[b]; DX:AX = AX * b = a * b
    24                                          
    25 0000000E 66BB0700                        mov bx, 7
    26 00000012 66B90000                        mov cx, 0 ; CX:BX = 7
    27 00000016 6629C3                          sub bx, ax ; BX = BX - AX = 7 - a*b
    28 00000019 6619CA                          sbb dx, cx ; CX = CX - DX - CF
    29                                          ; CX:BX = 7-a*b
    30                                          
    31 0000001C 66031D[01000000]                add bx, [c] ; BX = BX + c
    32 00000023 6683D100                        adc cx, 0 ; adunam CF in CX
    33                                          ; CX:BX = 7 - a * b + c
    34                                          
    35 00000027 6689D8                          mov ax, bx
    36 0000002A 6689CA                          mov dx, cx
    37                                          ; DX:AX = (7-a*b+c)
    38 0000002D 8A1D[00000000]                  mov bl, [a]
    39 00000033 B700                            mov bh, 0 ; conversie fara semn
    40 00000035 66F7F3                          div bx ; AX = DX:AX / BX ; DX = DX:AX % BX
    41                                          ; AX = (7 - a * b + c) / a
    42                                          
    43 00000038 BB00000000                      mov ebx, 0
    44 0000003D 6689C3                          mov bx, ax ; BX = AX = (7 - a * b + c) / a
    45 00000040 A1[04000000]                    mov eax, [d]
    46 00000045 29D8                            sub eax, ebx ; EAX = EAX - EBX
    47                                          ; EAX = d - (7 - a * b + c) / a
    48 00000047 83E806                          sub eax, 6 ; EAX = d - (7 - a * b + c) / a - 6
    49                                          
    50 0000004A 50                              push EAX ; EAX in stiva
    51                                          
    52 0000004B A1[08000000]                    mov eax, dword[x]
    53 00000050 8B15[0C000000]                  mov edx, dword[x+4] ; EDX:EAX = x
    54 00000056 BB02000000                      mov ebx, 2
    55 0000005B F7F3                            div ebx ; EAX = EDX:EAX / EBX  ;  EDX = EDX:EAX % EBX
    56                                          ; EAX = x / 2
    57                                          
    58 0000005D 5B                              pop ebx ; EBX = d - (7 - a * b + c) / a - 6
    59 0000005E 01D8                            add eax, ebx
    60 00000060 83D200                          adc edx, 0
    61                                          ; EAX = d - (7 - a * b + c) / a - 6 + x / 2
    62                                          
    63                                          
    64 00000063 6A00                            push dword 0
    65 00000065 FF15[00000000]                  call [exit]
