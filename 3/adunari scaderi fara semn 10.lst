     1                                  ; a - byte, b - word, c - double word, d - qword - Interpretare fara semn
     2                                  ; 10. (a+d+d)-c+(b+b)
     3                                  bits 32
     4                                  
     5                                  global start
     6                                  
     7                                  extern exit
     8                                  import exit msvcrt.dll
     9                                  
    10                                  segment data use32 class=data
    11 00000000 01                          a db 1
    12 00000001 0100                        b dw 1
    13 00000003 01000000                    c dd 1
    14 00000007 0100000000000000            d dq 1
    15                                      
    16                                  segment code use32 class=code
    17                                      start:
    18 00000000 B800000000                      mov eax, 0
    19 00000005 A0[00000000]                    mov al, [a] ; AL = a
    20 0000000A 0305[07000000]                  add eax, dword[d]
    21 00000010 1315[0B000000]                  adc edx, dword[d+4]
    22                                          ; EDX:EAX = a + d
    23                                          
    24 00000016 0305[07000000]                  add eax, dword[d]
    25 0000001C 1315[0B000000]                  adc edx, dword[d+4]
    26                                          ; EDX:EAX = a + d + d
    27                                          
    28 00000022 2B05[03000000]                  sub eax, [c]
    29 00000028 83DA00                          sbb edx, 0
    30                                          ; EDX:EAX = (a + d + d) - c
    31                                          
    32 0000002B BB00000000                      mov ebx, 0
    33 00000030 668B1D[01000000]                mov bx, [b]
    34 00000037 66031D[01000000]                add bx, [b] ; BX = b + b
    35                                          
    36                                          ;push bx
    37                                          
    38                                          ;pop bx
    39                                          
    40 0000003E 01D8                            add eax, ebx
    41 00000040 83D200                          adc edx, 0
    42                                          ; EDX:EAX = (a + d + d) - c + (b + b)
    43                                          
    44                                          
    45 00000043 6A00                            push dword 0
    46 00000045 FF15[00000000]                  call [exit]
