     1                                  ; Scrieți un program în limbaj de asamblare care să rezolve expresia aritmetică, considerând domeniile de definiție ale variabilelor
     2                                  ; a, b, c, d - byte    e, f, g, h - word
     3                                  ; a*d+b*c
     4                                  bits 32 ;asamblare si compilare pentru arhitectura de 32 biti
     5                                  ; definim punctul de intrare in programul principal
     6                                  global  start 
     7                                  
     8                                  extern  exit ; indicam asamblorului ca exit exista, chiar daca noi nu o vom defini
     9                                  import  exit msvcrt.dll; exit este o functie care incheie procesul, este definita in msvcrt.dll
    10                                          ; msvcrt.dll contine exit, printf si toate celelalte functii C-runtime importante
    11                                  segment  data use32 class=data ; segmentul de date in care se vor defini variabilele 
    12 00000000 0A                      	a db 10
    13 00000001 28                      	b db 40
    14 00000002 1E                          c db 30
    15 00000003 14                          d db 20
    16                                  segment  code use32 class=code ; segmentul de cod
    17                                  start: 
    18                                  	
    19 00000000 66A1[00000000]              mov ax, [a] ; AX = a
    20 00000006 668B15[03000000]            mov dx, [d] ; DX = d
    21 0000000D 66F7E2                      mul dx ; DX:AX = a * d
    22                                      
    23 00000010 6652                        push dx ;se pune pe stiva partea high din dw-ul DX:AX
    24 00000012 6650                        push ax ;se pune pe stiva partea low din dw-ul DX:AX
    25 00000014 5B                          pop ebx ; EBX = DX:AX = a * d
    26                                      
    27 00000015 66A1[00000000]              mov ax, [a] ; AX = b
    28 0000001B 668B15[03000000]            mov dx, [d] ; DX = c
    29 00000022 66F7E2                      mul dx ; DX:AX = b * c
    30                                      
    31 00000025 6652                        push dx ;se pune pe stiva partea high din dw-ul DX:AX
    32 00000027 6650                        push ax ;se pune pe stiva partea low din dw-ul DX:AX
    33 00000029 58                          pop eax ; EAX = DX:AX = a * d
    34                                      
    35 0000002A 01C3                        add ebx, eax ;
    36                                  	
    37                                  	
    38 0000002C 6A00                    	push   dword 0 ;se pune pe stiva codul de retur al functiei exit
    39 0000002E FF15[00000000]          	call   [exit] ;apelul functiei sistem exit pentru terminarea executiei programului
