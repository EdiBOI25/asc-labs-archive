     1                                  bits 32
     2                                  global start
     3                                  extern printf, scanf, exit
     4                                  import printf msvcrt.dll
     5                                  import scanf msvcrt.dll
     6                                  import exit msvcrt.dll
     7                                  
     8                                  segment data use32
     9 00000000 00000000                    number dd 0
    10 00000004 00000000                    max dd 0
    11 00000008 256400                      format db '%d', 0
    12                                  
    13                                  segment code use32
    14                                  start:
    15                                      read_loop:
    16                                          ;read number
    17 00000000 68[00000000]                    push dword number
    18 00000005 68[08000000]                    push dword format
    19 0000000A FF15[00000000]                  call [scanf]
    20 00000010 83C408                          add esp, 8
    21                                          
    22                                          ;check if number is 0
    23 00000013 833D[00000000]00                cmp dword [number], 0
    24 0000001A 7414                            je print_result
    25                                          
    26                                          ;check if number is bigger than max
    27 0000001C A1[00000000]                    mov eax, [number]
    28 00000021 3B05[04000000]                  cmp eax, [max]
    29 00000027 7605                            jbe after_if ; jle for signed
    30 00000029 A3[04000000]                    mov [max], eax
    31                                          after_if:
    32 0000002E EBD0                            jmp read_loop
    33                                          
    34                                          
    35                                      print_result:
    36 00000030 FF35[04000000]              push dword [max]
    37 00000036 68[08000000]                push dword format
    38 0000003B FF15[00000000]              call [printf]
    39 00000041 83C408                      add esp, 8
    40                                  
    41                                  final:
    42 00000044 6A00                        push dword 0
    43 00000046 FF15[00000000]              call [exit]
