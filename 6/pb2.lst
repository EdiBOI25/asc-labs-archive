     1                                  bits 32
     2                                  global start
     3                                  extern exit, printf
     4                                  import exit msvcrt.dll
     5                                  import printf msvcrt.dll
     6                                  
     7                                  segment data use32
     8 00000000 32147586BCAD                s1 dw 1432h, 8675h, 0ADBCh
     9 00000006 99<rept>                    caca times 100 db 99h
    10                                      len1_bytes equ $ - s1
    11 0000006A 00000000<rept>              s2 times len1_bytes / 2 dd 0
    12 0000013E 53323A2025782C2025-         format db 'S2: %x, %x, %x', 13, 10, 0
    12 00000147 782C2025780D0A00   
    13                                      
    14                                  
    15                                  segment code use32
    16                                  start:
    17                                      ; EXPAND NIBBLES TO BYTES
    18 00000000 BE[00000000]                mov esi, s1
    19 00000005 BF[6A000000]                mov edi, s2
    20 0000000A B96A000000                  mov ecx, len1_bytes
    21 0000000F E373                        jecxz final
    22 00000011 FC                          cld
    23                                      expand_nibbles_loop:
    24 00000012 B800000000                      mov eax, 0
    25 00000017 AC                              lodsb ; al = 32h
    26 00000018 66C1E004                        shl ax, 4 ; ax = 0320h
    27 0000001C C0E804                          shr al, 4 ; ax = 0302h
    28 0000001F 66AB                            stosw
    29 00000021 E2EF                        loop expand_nibbles_loop
    30                                      
    31                                      ; SORT S2
    32 00000023 B935000000                  mov ecx, len1_bytes / 2
    33 00000028 E35A                        jecxz final
    34 0000002A BB[6A000000]                mov ebx, s2
    35                                      sort_s2:
    36 0000002F 51                              push ecx
    37                                          
    38 00000030 B904000000                      mov ecx, 4
    39 00000035 BE00000000                      mov esi, 0
    40                                          sort_loop_big:
    41 0000003A 51                                  push ecx
    42                                              
    43 0000003B B904000000                          mov ecx, 4
    44 00000040 BF00000000                          mov edi, 0
    45                                              sort_loop_small:
    46 00000045 51                                      push ecx
    47 00000046 8A0433                                  mov al, [ebx + esi]
    48 00000049 8A143B                                  mov dl, [ebx + edi]
    49 0000004C 38D0                                    cmp al, dl
    50 0000004E 7206                                    jb no_swap
    51                                                  
    52 00000050 881433                                  mov [ebx + esi], dl
    53 00000053 88043B                                  mov [ebx + edi], al
    54                                                  
    55                                                  no_swap:
    56 00000056 59                                      pop ecx
    57 00000057 47                                      inc edi
    58 00000058 E2EB                                    loop sort_loop_small
    59                                                  
    60 0000005A 59                                  pop ecx
    61 0000005B 46                                  inc esi
    62 0000005C E2DC                                loop sort_loop_big
    63                                              
    64 0000005E 59                              pop ecx
    65 0000005F 83C304                          add ebx, 4
    66 00000062 E2CB                            loop sort_s2
    67                                      
    68                                      ; PRINT S2
    69 00000064 FF35[72000000]              push dword [s2 + 8]
    70 0000006A FF35[6E000000]              push dword [s2 + 4]
    71 00000070 FF35[6A000000]              push dword [s2]
    72 00000076 68[3E010000]                push dword format
    73 0000007B FF15[00000000]              call [printf]
    74 00000081 83C410                      add esp, 16
    75                                      
    76                                  final:
    77 00000084 6A00                        push dword 0
    78 00000086 FF15[00000000]              call [exit]
