     1                                  ;10. Se da un sir A de cuvinte. Construiti 2 siruri de octeti:
     2                                  ; - B1: contine ca elemente partea superioara a cuvintelor din A
     3                                  ; - B2: contine ca elemente partea inferioara a cuvintelor din A
     4                                  
     5                                  bits 32
     6                                  global start        
     7                                  extern exit
     8                                  import exit msvcrt.dll
     9                                  
    10                                  segment data use32 class=data
    11 00000000 34121946AA12322A            a dw 1234h, 4619h, 12AAh, 2A32h ; sir initial
    12                                      len equ ($-a)/2 ; lungimea sirului in cuvinte
    13 00000008 00<rept>                    b1 times len db 0 ; rezervam len cuvinte pentru sirul b1
    14                                      ; 12h, 46h, 12h, 2Ah
    15 0000000C 00<rept>                    b2 times len db 0 ; rezervam len cuvinte pentru sirul b2
    16                                      ; 34h, 19h, AAh, 32h
    17                                  
    18                                  segment code use32 class=code
    19                                      start:
    20 00000000 BE[00000000]                    mov esi, a ; esi va retine offset-ul primului element din A
    21 00000005 BF[08000000]                    mov edi, b1 ; edi va retine offset-ul primului elem din B1
    22 0000000A FC                              cld ; DF = 0 pt ca parcurgem de la stanga la dreapta
    23 0000000B B904000000                      mov ecx, len ; repetam loop-ul de len ori
    24 00000010 E320                            jecxz Sfarsit
    25                                          RepetaB1:
    26 00000012 66AD                                lodsw ; in AX retinem cuvantul din DS:ESI (adica A)
    27 00000014 66C1E808                            shr AX, 8 ; shiftam spre dreapta cu 1 byte
    28 00000018 AA                                  stosb ; AL se incarca in ES:EDI (adica B1)
    29 00000019 E2F7                                loop RepetaB1
    30                                          
    31 0000001B BE[00000000]                    mov esi, a ; esi va retine offset-ul primului element din A
    32 00000020 BF[0C000000]                    mov edi, b2 ; edi va retine offset-ul primului element din B2
    33 00000025 FC                              cld ; DF = 0 pt ca parcurgem de la stanga la dreapta
    34 00000026 B904000000                      mov ecx, len ; repetam loop-ul de len ori
    35 0000002B E305                            jecxz Sfarsit
    36                                          RepetaB2:
    37 0000002D 66AD                                lodsw ; in AX retinem cuvantul din ED:ESI (adica A)
    38 0000002F AA                                  stosb ; AL se incarca in ES:EDI (adica B2)
    39 00000030 E2FB                                loop RepetaB2
    40                                      Sfarsit:
    41 00000032 6A00                            push    dword 0
    42 00000034 FF15[00000000]                  call    [exit]
