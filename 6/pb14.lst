     1                                  bits 32
     2                                  global start
     3                                  extern exit, printf
     4                                  import exit msvcrt.dll
     5                                  import printf msvcrt.dll
     6                                  
     7                                  segment data use32
     8 00000000 07563412153C2B1A            s dd 12345607h, 1A2B3C15h
     9                                      len_s_bytes equ $ - s
    10 00000008 00<rept>                    d times len_s_bytes db 0
    11 00000010 25582000                    format db '%X ', 0
    12 00000014 2558203C2025583F0D-         format2 db '%X < %X?', 13, 10, 0
    12 0000001D 0A00               
    13                                  
    14                                  segment code use32
    15                                  start:
    16                                      ; copy bytes from s to d
    17 00000000 B908000000                  mov ecx, len_s_bytes
    18 00000005 BE[00000000]                mov esi, s
    19 0000000A BF[08000000]                mov edi, d
    20 0000000F FC                          cld
    21                                      ;jecxz final
    22                                      copy_loop:
    23 00000010 B800000000                      mov eax, 0
    24 00000015 AC                              lodsb
    25 00000016 AA                              stosb
    26 00000017 E2F7                        loop copy_loop
    27                                      
    28                                      ; sort d
    29 00000019 B908000000                  mov ecx, len_s_bytes
    30                                      ;jecxz final
    31 0000001E BE00000000                  mov esi, 0
    32 00000023 B800000000                  mov eax, 0
    33 00000028 BA00000000                  mov edx, 0
    34                                      sort_loop_big:
    35 0000002D 51                              push ecx
    36 0000002E 89F7                            mov edi, esi
    37                                          sort_loop_small:
    38 00000030 8A86[08000000]                      mov al, [d + esi]
    39 00000036 8A97[08000000]                      mov dl, [d + edi]
    40                                              
    41 0000003C 38D0                                cmp al, dl
    42 0000003E 720C                                jb no_swap
    43                                              
    44 00000040 8896[08000000]                      mov [d + esi], dl
    45 00000046 8887[08000000]                      mov [d + edi], al
    46                                              
    47                                              no_swap:            
    48 0000004C 47                                  inc edi
    49 0000004D 83FF08                              cmp edi, len_s_bytes
    50 00000050 75DE                                jne sort_loop_small
    51                                          
    52 00000052 59                              pop ecx
    53 00000053 46                              inc esi
    54 00000054 E2D7                        loop sort_loop_big
    55                                      
    56                                      ; print d
    57 00000056 B908000000                  mov ecx, len_s_bytes
    58 0000005B E324                        jecxz final
    59 0000005D BE00000000                  mov esi, 0
    60                                      print_loop:
    61 00000062 51                              push ecx
    62 00000063 B800000000                      mov eax, 0
    63 00000068 8A86[08000000]                  mov al, [d + esi]
    64 0000006E 50                              push eax
    65 0000006F 68[10000000]                    push format
    66 00000074 FF15[00000000]                  call [printf]
    67 0000007A 83C408                          add esp, 8
    68 0000007D 46                              inc esi
    69 0000007E 59                              pop ecx
    70 0000007F E2E1                        loop print_loop
    71                                  
    72                                  final:
    73 00000081 6A00                        push dword 0
    74 00000083 FF15[00000000]              call [exit]
